// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator records {
  provider  = "prisma-json-types-generator"
  namespace = "PrismaJson"
}

model ObjectiveRecord {
  id   Int  @id @default(autoincrement())
  /// @json("ObjectiveRecord")
  data Json

  team       Team? @relation(fields: [teamNumber], references: [number])
  teamNumber Int?

  match   Match? @relation(fields: [matchId], references: [id])
  matchId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("objective_records")
}

model SubjectiveRecord {
  id   Int  @id @default(autoincrement())
  /// @json("SubjectiveRecord")
  data Json

  team       Team? @relation(fields: [teamNumber], references: [number])
  teamNumber Int?

  match   Match? @relation(fields: [matchId], references: [id])
  matchId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("subjective_records")
}

model PitRecord {
  id   Int  @id @default(autoincrement())
  /// @json("PitRecord")
  data Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  team Team?

  @@map("pit_records")
}

model Match {
  id     Int       @id @default(autoincrement())
  number Int
  type   MatchType

  blueTeams         Team[]             @relation("blue")
  redTeams          Team[]             @relation("red")
  objectiveRecords  ObjectiveRecord[]
  subjectiveRecords SubjectiveRecord[]

  @@unique([number, type])
  @@map("matches")
}

enum MatchType {
  PRACTICE
  QUALIFICATION
  QUARTERFINAL
  SEMIFINAL
  FINAL
}

model Team {
  number Int    @id
  name   String

  objectiveRecords  ObjectiveRecord[]
  subjectiveRecords SubjectiveRecord[]
  blueIn            Match[]            @relation("blue")
  redIn             Match[]            @relation("red")
  pitRecord         PitRecord?         @relation(fields: [pitRecordId], references: [id])
  pitRecordId       Int?               @unique
}
